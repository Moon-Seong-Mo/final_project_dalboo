/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.38
 * Generated at: 2021-02-07 15:40:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class insertAddressView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>달보드레 | 배송지 추가</title>\r\n");
      out.write("<script src=\"https://t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("\thr{margin-bottom:30px;}\r\n");
      out.write("\ttable{padding:10px;}\r\n");
      out.write("\tinput[type=\"text\"]{width:280px; height:30px;}\r\n");
      out.write("\t.Btn {\r\n");
      out.write("\t\tborder: 0px;\r\n");
      out.write("\t\tbackground-color: rgb(244, 244, 244);\r\n");
      out.write("\t\twidth: 50px;\r\n");
      out.write("\t\theight: 30px;\r\n");
      out.write("\t\tborder-radius: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.orangeBtn {\r\n");
      out.write("\t\tborder: 0px;\r\n");
      out.write("\t\tbackground-color: rgb(227, 189, 152);\t\r\n");
      out.write("\t\twidth: 50px;\r\n");
      out.write("\t\theight: 30px;\r\n");
      out.write("\t\tborder-radius: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#btnArea{float:right; margin-right:30px; margin-top:20px;}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h2 align=\"left\">배송지 추가</h2>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<form action=\"insertAddress.me\" method=\"post\" name=\"insertAdd\" onsubmit=\"return send(this)\">\r\n");
      out.write("\t\t<div align=\"left\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td width=\"100px;\">배송지</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"adName\" style=\"width:150px;\" required></td>\r\n");
      out.write("\t\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>수령인</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"adReceiver\" style=\"width:150px;\" required></td>\r\n");
      out.write("\t\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>우편번호</td>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" id=\"postal\" name=\"postal\" readonly>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"button\" id=\"findPostal\" class=\"Btn\" onclick=\"ifindPostal();\" value=\"검색\">\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>주소</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"address1\" name=\"address1\" required></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>상세주소</td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" id=\"address2\" name=\"address2\" required></td>\r\n");
      out.write("\t\t\t\t</tr>\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>연락처</td>\r\n");
      out.write("\t               \t<td>\r\n");
      out.write("\t               \t\t<div>\r\n");
      out.write("\t\t                  \t<select name=\"phone1\" id=\"phone1\" style=\"width:80px; height:30px\">\r\n");
      out.write("\t\t                       <option>010</option>\r\n");
      out.write("\t\t                       <option>011</option>\r\n");
      out.write("\t\t                       <option>016</option>\r\n");
      out.write("\t\t                       <option value=\"direct\">직접입력</option>\r\n");
      out.write("\t\t                   </select>\r\n");
      out.write("\t\t\t\t\t\t\t-\r\n");
      out.write("\t                  \t\t<input type=\"text\" maxlength=\"4\" size=\"4\" name=\"phone2\" id=\"phone2\" required style=\"width:70px; height:25px\">\r\n");
      out.write("\t\t\t\t\t\t\t-\r\n");
      out.write("\t                \t   <input type=\"text\" maxlength=\"4\" size=\"4\" name=\"phone3\" id=\"phone3\" required style=\"width:70px; height:25px\">\r\n");
      out.write("\t               \t\t</div>\r\n");
      out.write("\t               </td>\r\n");
      out.write("\t\t\t\t</tr>\t\t\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"btnArea\">\r\n");
      out.write("\t\t\t<input type=\"button\" value=\"취소\" class=\"Btn\" onclick=\"window.close()\">\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"등록\" class=\"orangeBtn\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</form>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction ifindPostal() {\r\n");
      out.write("\t        new daum.Postcode({\r\n");
      out.write("\t            oncomplete: function(data) {\r\n");
      out.write("\t                var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("\t                var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\t\r\n");
      out.write("\t                // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\r\n");
      out.write("\t                if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("\t                    extraRoadAddr += data.bname;\r\n");
      out.write("\t                }\r\n");
      out.write("\t                // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("\t                if (data.buildingName !== '' && data.apartment === 'Y') {\r\n");
      out.write("\t                    extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("\t                }\r\n");
      out.write("\t                // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("\t                if (extraRoadAddr !== '') {\r\n");
      out.write("\t                    extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("\t                }\r\n");
      out.write("\t\r\n");
      out.write("\t                // 우편번호와 주소 정보를 해당 필드에 넣는다.\r\n");
      out.write("\t                document.getElementById('postal').value = data.zonecode;\r\n");
      out.write("\t                document.getElementById(\"address1\").value = roadAddr;\r\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"address2\").value = \"\";\r\n");
      out.write("\t\r\n");
      out.write("\t                // 참고항목 문자열이 있을 경우 해당 필드에 넣는다.\r\n");
      out.write("\t                if (roadAddr !== '') {\r\n");
      out.write("\t                    document.getElementById(\"address1\").value += extraRoadAddr;\r\n");
      out.write("\t                } else {\r\n");
      out.write("\t                    document.getElementById(\"address1\").value += '';\r\n");
      out.write("\t                }\r\n");
      out.write("\t            }\r\n");
      out.write("\t        }).open();\r\n");
      out.write("\t    }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction send(form){\r\n");
      out.write("\t\t\tvar postal = document.getElementById(\"postal\").value;\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif(postal == \"\" || postal.length == 0){\r\n");
      out.write("\t\t\t\talert(\"검색 버튼을 눌러 우편번호를 찾아주세요\");\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
